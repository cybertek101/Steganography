/*
 * pracbi.java
 *
 * Created on October 15, 2007, 9:33 PM
 */

package my.steganography;

import java.awt.Graphics2D;
import java.awt.MediaTracker;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author  asmel
 */
public class pracbi extends javax.swing.JFrame {
    BufferedImage coverImage = null;
    BufferedImage stegoImage = null;
    int[] coverImage1DPix;
    int[] stegoImage1DPix;
    
    String secretMessage = "";    
    String cwd="/home/asmel/Desktop/images/";
    /** Creates new form pracbi */
    public pracbi() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        btnLoad = new javax.swing.JButton();
        scrpnbi = new javax.swing.JScrollPane();
        lblCoverImage = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        btnLoad.setText("Load");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        lblCoverImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCoverImage.setText("jLabel1");
        scrpnbi.setViewportView(lblCoverImage);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 76, Short.MAX_VALUE)
        );
        jTabbedPane1.addTab("tab2", jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 76, Short.MAX_VALUE)
        );
        jTabbedPane1.addTab("tab1", jPanel1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                    .addComponent(scrpnbi, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                    .addComponent(btnLoad)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(btnLoad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrpnbi, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
// TODO add your handling code here:
        JFileChooser fc = new JFileChooser("");
        int result = fc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION){
            File file = fc.getSelectedFile();
            String imageFileName = file.getPath();
            //JOptionPane.showConfirmDialog(this, imageFileName, "filename", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE);
            
            int loadStatus = this.setCoverImage(imageFileName);
            //System.out.println(loadStatus);
            System.out.println(""+loadStatus);
            if (loadStatus == -1){
                this.lblCoverImage.setText("Error loading cover image. Image may be corrupted or is taking long to load");
                this.lblCoverImage.setIcon(null);
                return;
            }
            
            //if loaded successfuly
            this.lblCoverImage.setText("");
            this.lblCoverImage.setIcon(new ImageIcon(coverImage));
            System.out.println("h:"+this.coverImage.getHeight(null)+"w:"+this.coverImage.getWidth(null));                        
            
            this.processImage();            
        }
    }//GEN-LAST:event_btnLoadActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pracbi().setVisible(true);
            }
        });
    }

    private int setCoverImage(String imageFileName) {               
        try{
            this.coverImage = ImageIO.read(new File(imageFileName));            
        }
        catch(IOException e){
            e.printStackTrace();
            return -1;
        }        
        return 1;//loaded
    }

    private void processImage() {
        int h = this.coverImage.getHeight();
        int w = this.coverImage.getWidth();  
        this.coverImage1DPix = new int[w*h];
        this.coverImage.getRGB(0, 0, w, h, this.coverImage1DPix, 0, w);
        
        this.stegoImage1DPix = new int[h*w];
        
        for (int i=0; i<h*w; ++i){        
            this.stegoImage1DPix[i]=this.coverImage1DPix[i];
        }
        
        //modify pixels here
        System.out.println("MODIFICATION HERE");
        //this.secretMessage = 
        //this.getSecretMessage();
        //System.out.println("" + this.secretMessage.length());
        this.extractSecretMesssage(127);//this.secretMessage.length());
        //this.hideSecretMessage();
        System.exit(0);
        try {        
            this.stegoImage = new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);
            //Graphics2D g2 = this.stegoImage.createGraphics();
            //g2.drawImage(this.coverImage, null, 0, 0);
            this.stegoImage.setRGB(0, 0, w, h, this.stegoImage1DPix, 0, w);
            ImageIO.write(this.stegoImage, "png", new File(this.cwd + "newimage"));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        System.out.println("DISPLAYING DATa");
        for (int i = 0; i < h*w; ++i){        
            //this.stegoImage1DPix[i]=this.coverImage1DPix[i];
            System.out.print("" + ((this.coverImage1DPix[i] >> 24)&0xFF) + "-" + ((this.coverImage1DPix[i] >> 16)&0xff) + "-" + ((this.coverImage1DPix[i] >> 8)&0xff) + "-" + ((this.coverImage1DPix[i])&0xff));
            System.out.println("|" + ((this.stegoImage1DPix[i] >> 24)&0xff) + "-" + ((this.stegoImage1DPix[i] >> 16)&0xff) + "-" + ((this.stegoImage1DPix[i] >> 8)&0xff) + "-" + ((this.stegoImage1DPix[i])&0xff));
        }
    }
    
    void getSecretMessage(){
        JFileChooser fc = new JFileChooser("");
        int result = fc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION){
            File file = fc.getSelectedFile();
            BufferedReader br;
            try {
                br = new BufferedReader(new FileReader(file));
                String line = null;
                try {
                    line = br.readLine();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
                //System.out.println(""+line);
                while (line != null){
                    this.secretMessage += (line + "\n");
                    try {
                        line = br.readLine();
                    } catch (IOException ex) {                        
                        //JOptionPane.showMessageDialog(this, "error io", "", JOptionPane.INFORMATION_MESSAGE);
                        ex.printStackTrace();
                    }
                    //System.out.println(""+line);
                }                   
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            }                            
        }
        //System.out.println("safe");
    }
    
    public void hideSecretMessage(){
        
        for (int msgIndex = 0; msgIndex < this.secretMessage.length(); ++msgIndex){           
            int charVal = this.secretMessage.charAt(msgIndex);            
            String binary = this.getBinaryString(charVal);
            
            //System.out.println((char)charVal + " " + binary);
            if (binary.charAt(0)=='1') this.stegoImage1DPix[2*msgIndex] |= 0x01000000;
            else this.stegoImage1DPix[2*msgIndex] &= 0xFEFFFFFF;
            
            if (binary.charAt(1)=='1') this.stegoImage1DPix[2*msgIndex] |= 0x00010000;
            else this.stegoImage1DPix[2*msgIndex] &= 0xFFFEFFFF;
            
            if (binary.charAt(2)=='1') this.stegoImage1DPix[2*msgIndex] |= 0x00000100;
            else this.stegoImage1DPix[2*msgIndex] &= 0xFFFFFEFF;
            
            if (binary.charAt(3)=='1') this.stegoImage1DPix[2*msgIndex] |= 0x00000001;
            else this.stegoImage1DPix[2*msgIndex] &= 0xFFFFFFFE;
            
            //----
            if (binary.charAt(4) == '1') this.stegoImage1DPix[2*msgIndex + 1] |= 0x01000000;
            else this.stegoImage1DPix[2*msgIndex + 1] &= 0xFEFFFFFF;
            
            if (binary.charAt(5) == '1') this.stegoImage1DPix[2*msgIndex + 1] |= 0x00010000;
            else this.stegoImage1DPix[2*msgIndex + 1] &= 0xFFFEFFFF;
            
            if (binary.charAt(6) == '1') this.stegoImage1DPix[2*msgIndex + 1] |= 0x00000100;
            else this.stegoImage1DPix[2*msgIndex + 1] &= 0xFFFFFEFF;
            
            if (binary.charAt(7) == '1') this.stegoImage1DPix[2*msgIndex + 1] |= 0x00000001;
            else this.stegoImage1DPix[2*msgIndex + 1] &= 0xFFFFFFFE;
        }
    }
    
    public void extractSecretMesssage(int messageLen){
        String secretMessage = "";
        //JOptionPane.showMessageDialog(this, "" + messageLen, "len", JOptionPane.INFORMATION_MESSAGE);
        for (int i = 0; i < messageLen; ++i){
            String binary = "" + ((this.stegoImage1DPix[2*i] >> 24)&0x01) + "" + ((this.stegoImage1DPix[2*i] >> 16)&0x01) + "" + ((this.stegoImage1DPix[2*i] >> 8)&0x01) + "" + ((this.stegoImage1DPix[2*i])&0x01) +
                            "" + ((this.stegoImage1DPix[2*i+1] >> 24)&0x01) + "" + ((this.stegoImage1DPix[2*i+1] >> 16)&0x01) + "" + ((this.stegoImage1DPix[2*i+1] >> 8)&0x01) + "" + ((this.stegoImage1DPix[2*i+1])&0x01);
            //System.out.println(binary);            
            
            secretMessage += this.getCharacterValue(binary);
        }       
        //JOptionPane.showMessageDialog(this, secretMessage, "Secret revieled", JOptionPane.INFORMATION_MESSAGE);
        System.out.println(secretMessage);
    }
    
    public char getCharacterValue(String binary){
        int charVal = 0;
        for (int j = 7; j >= 0; --j){
            //charVal+=binary.charAt(7-j) * Math.pow(2.0, (double)j);
            if (binary.charAt(7-j) == '1'){
                charVal += Math.pow(2.0, (double)j);
            }
        }
        return (char)charVal;
    }
    
    public String getBinaryString(int charVal){
        String binary="";
        for (int i = 7; i >= 0; --i){
            if (((charVal >> i) & 0x01) == 1){                  
                binary+="1";
            }else                    
                binary+="0";
        }
        return binary;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoad;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblCoverImage;
    private javax.swing.JScrollPane scrpnbi;
    // End of variables declaration//GEN-END:variables
    
}
